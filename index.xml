<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>akshara soman</title>
<link>https://www.aksharasoman.github.io/</link>
<atom:link href="https://www.aksharasoman.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>A machine learning blog</description>
<generator>quarto-1.5.53</generator>
<lastBuildDate>Thu, 11 Jul 2024 18:30:00 GMT</lastBuildDate>
<item>
  <title>Generate Handwritten Digits Using GAN</title>
  <dc:creator>Akshara Soman</dc:creator>
  <link>https://www.aksharasoman.github.io/posts/welcome/</link>
  <description><![CDATA[ 





<section id="objective-of-the-project" class="level3">
<h3 class="anchored" data-anchor-id="objective-of-the-project">Objective of the Project:</h3>
<p>Build a DC-GAN (Deep Convolutional Generative Adversarial Network) to generate images of handwritten digits.</p>
</section>
<section id="important-details" class="level3">
<h3 class="anchored" data-anchor-id="important-details">Important Details:</h3>
<ol type="1">
<li>Dataset: MNIST handwritten digits dataset (grayscale)</li>
<li>Model: Generative Adversarial Network (GAN)</li>
<li>Code available at:</li>
</ol>
</section>
<section id="expected-learnings" class="level3">
<h3 class="anchored" data-anchor-id="expected-learnings">Expected learnings:</h3>
<ol type="1">
<li>What is Generative Adversarial Network?</li>
<li>Applications</li>
<li>What is Generator?</li>
<li>What is discriminator?</li>
<li>Understanding architecture</li>
<li>Loss functions</li>
<li>How to generate a fake image using GAN?</li>
<li>How to download and transform data in Pytorch?</li>
<li>How to calculate input image size for each layer?</li>
<li>How to build a GAN model from scratch in pytorch?</li>
<li>How to train the model on colab with GPU?
<ol type="1">
<li>How to train the model in a remote cluster environment?</li>
</ol></li>
<li>Challenges in GAN</li>
</ol>
</section>
<section id="implementation" class="level3">
<h3 class="anchored" data-anchor-id="implementation">Implementation</h3>
<p>This project can be divided into 7 tasks. 1. Configurations 2. Load Dataset 3. Load dataset into batches 4. Create discriminator network 5. Create generator network 6. Create loss function &amp; optimizer 7. Training Loop</p>
</section>
<section id="references" class="level3">
<h3 class="anchored" data-anchor-id="references">References</h3>
<ol type="1">
<li>Coursera Guided Project: “<a href="https://www.coursera.org/projects/deep-learning-with-pytorch-generative-adversarial-network#details">Deep Learning with PyTorch : Generative Adversarial Network</a>”</li>
</ol>


</section>

 ]]></description>
  <category>project</category>
  <category>gen-ai</category>
  <category>GAN</category>
  <category>pytorch</category>
  <guid>https://www.aksharasoman.github.io/posts/welcome/</guid>
  <pubDate>Thu, 11 Jul 2024 18:30:00 GMT</pubDate>
</item>
<item>
  <title>Post With Code</title>
  <dc:creator>Harlow Malloc</dc:creator>
  <link>https://www.aksharasoman.github.io/posts/post-with-code/</link>
  <description><![CDATA[ 





<p>This is a post with executable code.</p>



 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://www.aksharasoman.github.io/posts/post-with-code/</guid>
  <pubDate>Mon, 08 Jul 2024 18:30:00 GMT</pubDate>
  <media:content url="https://www.aksharasoman.github.io/posts/post-with-code/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Quarto Basics</title>
  <dc:creator>Akshara Soman</dc:creator>
  <link>https://www.aksharasoman.github.io/posts/matplotlib-demo/hello.html</link>
  <description><![CDATA[ 





<p>For a demonstration of a line plot on a polar axis, see Figure&nbsp;1.</p>
<div id="cell-fig-polar" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb1-5">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r</span>
<span id="cb1-6">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(</span>
<span id="cb1-7">  subplot_kw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'projection'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'polar'</span>} </span>
<span id="cb1-8">)</span>
<span id="cb1-9">ax.plot(theta, r)</span>
<span id="cb1-10">ax.set_rticks([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-11">ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-12">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-polar" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://www.aksharasoman.github.io/posts/matplotlib-demo/hello_files/figure-html/fig-polar-output-1.png" width="450" height="439" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A line plot on a polar axis
</figcaption>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>matplotlib</category>
  <category>code</category>
  <category>visualization</category>
  <guid>https://www.aksharasoman.github.io/posts/matplotlib-demo/hello.html</guid>
  <pubDate>Mon, 08 Jul 2024 18:30:00 GMT</pubDate>
</item>
</channel>
</rss>
